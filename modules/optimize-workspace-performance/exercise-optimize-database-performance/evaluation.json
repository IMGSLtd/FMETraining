{
  "_id": "trailhead.challenge.exercise-optimize-database-performance.en.us.192",
  "color": "",
  "description_html": "",
  "icon_url": "",
  "langLocale": "en-us",
  "success_html": "",
  "title": "Exercise: Optimize Database Performance",
  "total_mins": 15,
  "type": "challenge",
  "code_evaluation_json": {
    "title": "",
    "description": "",
    "requirements": [],
    "assessment": [],
    "questions": [
      {
        "question": "Why is using a WHERE clause on the reader faster than filtering data using the Tester?",
        "questionID": "b32fd362-dc74-40c4-b29e-e58a84244814",
        "options": [
          "It is not faster",
          "The Tester is particularly slow when working with PostGIS and geodatabase formats",
          "With the WHERE clause you filter the data using a published parameter, while the Tester uses a fixed value",
          "With the WHERE clause you don't read data only to immediately filter it out"
        ],
        "answers": [3]
      },
      {
        "question": "This example shows how to use an SQLCreator. Under what circumstances would using an SQLExecutor make more sense?",
        "questionID": "ce7f462b-e7e7-4d24-81b2-d0802ed25cb5",
        "options": [
          "If the input data for the workspace contained a point or area of interest",
          "If the input data for the workspace contained a list of address IDs and you wanted to run an SQL statement for each one",
          "If the input data for the workspace contained a text file with an SQL statement in it",
          "If the input data for the workspace was in GeoJSON format"
        ],
        "answers": [1]
      }
    ]
  },
  "org": ""
}